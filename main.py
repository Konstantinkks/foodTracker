import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from config import TOKEN
from db import init_db, add_product, get_products
from notify import scheduler, notify_expiring_products

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —É—á—ë—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤.

–ò—Å–ø–æ–ª—å–∑—É–π /add —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç.
–ù–∞–ø—Ä–∏–º–µ—Ä:
–ú–æ–ª–æ–∫–æ, 1 –ª, 2025-05-30

–ò /list —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å.")

@dp.message(Command("add"))
async def cmd_add(message: Message):
    await message.answer("‚úçÔ∏è –í–≤–µ–¥–∏ –ø—Ä–æ–¥—É–∫—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
–ù–∞–∑–≤–∞–Ω–∏–µ, –ö–æ–ª-–≤–æ, –°—Ä–æ–∫ (–ì–ì–ì–ì-–ú–ú-–î–î)")

@dp.message()
async def handle_product_entry(message: Message):
    parts = [x.strip() for x in message.text.split(",")]
    if len(parts) != 3:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–º–µ—Ä:
–•–ª–µ–±, 1 —à—Ç, 2025-06-01")
        return
    name, qty, date = parts
    if add_product(message.from_user.id, name, qty, date):
        await message.answer(f"‚úÖ –ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {name} ‚Äî {qty} –¥–æ {date}")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏. –ü—Ä–æ–≤–µ—Ä—å —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã (–ì–ì–ì–ì-–ú–ú-–î–î)")

@dp.message(Command("list"))
async def cmd_list(message: Message):
    products = get_products(message.from_user.id)
    if not products:
        await message.answer("üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤.")
        return
    lines = ["üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:"]
    for name, qty, date in products:
        lines.append(f"‚Äî {name} ({qty}), –¥–æ {date}")
    await message.answer("\n".join(lines))

async def main():
    init_db()
    scheduler.start()
    scheduler.add_job(notify_expiring_products, 'interval', hours=24, args=[bot])
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())